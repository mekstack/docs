apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: docs
data:
  nginx.conf: |-
    user nginx;
    worker_processes  1;

    events {
      worker_connections  512;
    }

    http {
      keepalive_timeout   65;

      server {
        listen 80;
        server_name docs.staging.mekstack.ru;

        location / {
          resolver kube-dns.kube-system.svc.cluster.local;
          set $bucket "mekstack-docs.website.yandexcloud.net/master/index.html";
          proxy_intercept_errors on;
          proxy_redirect off;
          proxy_set_header Host $bucket;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_hide_header x-amz-id-2;
          proxy_hide_header x-amz-request-id;

          proxy_pass http://$bucket$request_uri;
        }

        location /healthz {
          access_log off;
          add_header 'Content-Type' 'application/json';
          return 200 '{"status":"UP"}';
        }
      }

      server {
        listen 80;
        server_name "~^pr-(?<branch>\d{1,3})\.docs\.staging\.mekstack\.ru$";

        location / {
          resolver kube-dns.kube-system.svc.cluster.local;
          set $bucket "mekstack-docs.website.yandexcloud.net/pr-$branch/index.html";
          proxy_intercept_errors on;
          proxy_redirect off;
          proxy_set_header Host $bucket;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_hide_header x-amz-id-2;
          proxy_hide_header x-amz-request-id;

          proxy_pass http://$bucket$request_uri;
        }
      }
    }
